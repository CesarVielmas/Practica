// <auto-generated />
using System;
using CursosData.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CursosData.Migrations
{
    [DbContext(typeof(dbContext))]
    partial class dbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("CursosEntitys.Models.Categoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Categorias");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Descripcion = "Categoria 1 activada"
                        },
                        new
                        {
                            Id = 2,
                            Descripcion = "Categoria 2 activada"
                        },
                        new
                        {
                            Id = 3,
                            Descripcion = "Categoria 3 activada"
                        });
                });

            modelBuilder.Entity("CursosEntitys.Models.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Direccion")
                        .HasColumnType("longtext");

                    b.Property<string>("Nombre")
                        .HasColumnType("longtext");

                    b.Property<string>("Telefono")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Clientes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Direccion = "Mision Real",
                            Nombre = "Cesar Alejandro",
                            Telefono = "10668239"
                        },
                        new
                        {
                            Id = 2,
                            Direccion = "Juan Carlos",
                            Nombre = "Flor Abigail",
                            Telefono = "10673239"
                        },
                        new
                        {
                            Id = 3,
                            Direccion = "San Javier",
                            Nombre = "Pedrito Solano",
                            Telefono = "12039489"
                        });
                });

            modelBuilder.Entity("CursosEntitys.Models.Factura", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("VentaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("VentaId");

                    b.ToTable("Facturas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ClienteId = 2,
                            Fecha = new DateTime(2023, 7, 19, 15, 20, 31, 123, DateTimeKind.Local).AddTicks(5953)
                        },
                        new
                        {
                            Id = 2,
                            ClienteId = 1,
                            Fecha = new DateTime(2023, 7, 19, 15, 20, 31, 123, DateTimeKind.Local).AddTicks(6050)
                        },
                        new
                        {
                            Id = 3,
                            ClienteId = 3,
                            Fecha = new DateTime(2023, 7, 19, 15, 20, 31, 123, DateTimeKind.Local).AddTicks(6061)
                        });
                });

            modelBuilder.Entity("CursosEntitys.Models.Producto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CategoriaId")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .HasColumnType("longtext");

                    b.Property<float?>("Precio")
                        .HasColumnType("float");

                    b.Property<int>("ProveedorId")
                        .HasColumnType("int");

                    b.Property<int?>("VentaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaId");

                    b.HasIndex("ProveedorId");

                    b.HasIndex("VentaId");

                    b.ToTable("Productos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoriaId = 2,
                            Descripcion = "Producto numero 1 dispuesto a luchar contra el crimen",
                            Precio = 50.43f,
                            ProveedorId = 1
                        },
                        new
                        {
                            Id = 2,
                            CategoriaId = 1,
                            Descripcion = "Producto numero 2 dispuesto a luchar contra el crimen",
                            Precio = 110.673f,
                            ProveedorId = 3
                        },
                        new
                        {
                            Id = 3,
                            CategoriaId = 3,
                            Descripcion = "Producto numero 3 dispuesto a luchar contra el crimen",
                            Precio = 80.142f,
                            ProveedorId = 2
                        });
                });

            modelBuilder.Entity("CursosEntitys.Models.Proveedor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Direccion")
                        .HasColumnType("longtext");

                    b.Property<string>("Nombre")
                        .HasColumnType("longtext");

                    b.Property<string>("Telefono")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Proveedors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Direccion = "Villa de juan luis",
                            Nombre = "Proveedor Carlos",
                            Telefono = "1381274"
                        },
                        new
                        {
                            Id = 2,
                            Direccion = "San luis potosi",
                            Nombre = "Proveedor Juan",
                            Telefono = "7150293"
                        },
                        new
                        {
                            Id = 3,
                            Direccion = "Coahuila",
                            Nombre = "Proveedor Cesar",
                            Telefono = "8149712"
                        });
                });

            modelBuilder.Entity("CursosEntitys.Models.Venta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("Cantidad")
                        .HasColumnType("int");

                    b.Property<int>("FacturaId")
                        .HasColumnType("int");

                    b.Property<int>("ProductoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Ventas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Cantidad = 20,
                            FacturaId = 2,
                            ProductoId = 3
                        },
                        new
                        {
                            Id = 2,
                            Cantidad = 40,
                            FacturaId = 3,
                            ProductoId = 1
                        },
                        new
                        {
                            Id = 3,
                            Cantidad = 60,
                            FacturaId = 1,
                            ProductoId = 2
                        });
                });

            modelBuilder.Entity("CursosEntitys.Models.Factura", b =>
                {
                    b.HasOne("CursosEntitys.Models.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CursosEntitys.Models.Venta", null)
                        .WithMany("Facturas")
                        .HasForeignKey("VentaId");

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("CursosEntitys.Models.Producto", b =>
                {
                    b.HasOne("CursosEntitys.Models.Categoria", "Categoria")
                        .WithMany()
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CursosEntitys.Models.Proveedor", "Proveedore")
                        .WithMany()
                        .HasForeignKey("ProveedorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CursosEntitys.Models.Venta", null)
                        .WithMany("Productos")
                        .HasForeignKey("VentaId");

                    b.Navigation("Categoria");

                    b.Navigation("Proveedore");
                });

            modelBuilder.Entity("CursosEntitys.Models.Venta", b =>
                {
                    b.Navigation("Facturas");

                    b.Navigation("Productos");
                });
#pragma warning restore 612, 618
        }
    }
}
